@startuml

title __RENTEDBIKESCREEN's Class Diagram__\n

  namespace view {
    namespace User {
      namespace RentedBikeScreen {
        class view.User.RentedBikeScreen.RentedBikeInfoController {
            ~ curState : Stage
            - batteryText : Text
            - bikeID : TextField
            - lockButton : Button
            - lockStatus : boolean
            - nameText : Text
            - priceText : Text
            - rentalFee : double
            - rentalTime : double
            - timeText : Text
            - typeText : Text
            - unlockButton : Button
            + RentedBikeInfoController()
            + initData()
            + initialize()
            {static} + isNumeric()
            ~ close()
            ~ lockBike()
            ~ unlockBike()
            - feeCalculate()
            - goToRentedBike()
            - timeCalculate()
        }
      }
    }
  }
  

  namespace view {
    namespace User {
      namespace RentedBikeScreen {
        class view.User.RentedBikeScreen.ScanController {
            ~ bikeID : TextField
            + ScanController()
            + initialize()
            {static} + isNumeric()
            - goToRentedBike()
        }
      }
    }
  }
  

  view.User.RentedBikeScreen.RentedBikeInfoController .up.|> javafx.fxml.Initializable
  view.User.RentedBikeScreen.RentedBikeInfoController o-- object.Bike : bike
  view.User.RentedBikeScreen.ScanController .up.|> javafx.fxml.Initializable
  view.User.RentedBikeScreen.ScanController o-- controller.BikeController : bikeController
  view.User.RentedBikeScreen.ScanController o-- controller.TransactionController : transactionController


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
